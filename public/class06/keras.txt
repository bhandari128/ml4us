~/ml4us/public/class06/keras.txt

A place to start with keras:

https://github.com/fchollet/keras

How to install keras into anaconda?

I tried this:

conda install -c conda-forge keras

It worked!

I saw this:


dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $ conda install -c conda-forge keras
Using Anaconda API: https://api.anaconda.org
Fetching package metadata .........
Solving package specifications: ..........

Package plan for installation in environment /home/dan/anaconda3:

The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    theano-0.8.2               |           py35_0         3.7 MB  conda-forge
    keras-1.0.7                |           py35_0         422 KB  conda-forge
    ------------------------------------------------------------
                                           Total:         4.1 MB

The following NEW packages will be INSTALLED:

    keras:  1.0.7-py35_0 conda-forge
    theano: 0.8.2-py35_0 conda-forge

Proceed ([y]/n)? 

Fetching packages ...
theano-0.8.2-p 100% || Time: 0:00:01   2.59 MB/s
keras-1.0.7-py 100% || Time: 0:00:00 829.93 kB/s
Extracting packages ...
[      COMPLETE      ]|| 100%
Linking packages ...
[      COMPLETE      ]|| 100%
dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $

dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $ python
Python 3.5.2 |Anaconda 4.2.0 (64-bit)| (default, Jul  2 2016, 17:53:06) 
[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import keras
Using Theano backend.
>>> 
>>> 
>>>

I'd prefer that it use TF instead of Theano but I will ignore Theano during my initial learning.

I wrote a simple script:

# ~/ml4us/public/class06/keras10.py

# This script should demo keras.

# Demo:
# ~/anaconda3/bin/python keras10.py

# Ref:
# https://github.com/fchollet/keras#getting-started-30-seconds-to-keras

from keras.models import Sequential

model = Sequential()

# Stacking layers is as easy as .add():

from keras.layers import Dense, Activation

model.add(Dense(output_dim=64, input_dim=100))
model.add(Activation("relu"))
model.add(Dense(output_dim=10))
model.add(Activation("softmax"))

# Once your model looks good, configure its learning process with .compile():

model.compile(loss='categorical_crossentropy', optimizer='sgd', metrics=['accuracy'])


I ran it:

dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $ ~/anaconda3/bin/python keras10.py
Using Theano backend.
dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $

It worked. Yay!

Next I downloaded the iris.csv data:

/usr/bin/curl -o iris.csv https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data

I wrote a simple script to use it.

ooooooooo


I configure keras to use TF by editing this file:
~/.keras/keras.json

I see this:

{
    "floatx": "float32",
    "epsilon": 1e-07,
    "image_dim_ordering": "th",
    "backend": "theano"
}

I changed it to this:

{
    "image_dim_ordering": "tf",
    "epsilon": 1e-07,
    "floatx": "float32",
    "backend": "tensorflow"
}

You can also define the environment variable KERAS_BACKEND and this will override what is defined in your config file :

KERAS_BACKEND=tensorflow python -c "from keras import backend"
Using TensorFlow backend.


gives me error:

dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $ ~/anaconda3/bin/python keras12.py
Using TensorFlow backend.
accuracy:
0.967834979693
[[ 0.44605422  0.23215543  0.32179031]
 [ 0.26224244  0.30527031  0.43248719]
 [ 0.32907647  0.28003377  0.39088982]
 [ 0.45620856  0.22441371  0.31937766]]
[[ 1.  0.  0.]
 [ 0.  0.  1.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[[ 0.25766754  0.30106917  0.44126332]
 [ 0.28815684  0.30885178  0.40299132]
 [ 0.47812131  0.21262509  0.30925354]
 [ 0.24794428  0.32044142  0.43161428]
 [ 0.45696774  0.22602746  0.31700471]]
[[ 0.  0.  1.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]
 [ 0.  0.  1.]
 [ 1.  0.  0.]]
Exception ignored in: <bound method BaseSession.__del__ of <tensorflow.python.client.session.Session object at 0x7f301ac0e208>>
Traceback (most recent call last):
  File "/home/dan/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 522, in __del__
  File "/home/dan/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 518, in close
AttributeError: 'NoneType' object has no attribute 'raise_exception_on_not_ok_status'
dan@pavlap:~/ml4us/public/class06 $ 
dan@pavlap:~/ml4us/public/class06 $

