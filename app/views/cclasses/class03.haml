%h1 Class03
%p In Class03 we review topics and techniques from Class01 and Class02. Then, look at the topics listed below and work towards transforming understanding into projects:

%h2 Topics:
%ul
  %li Linear Algebra
  %li NumPy
  %li Pandas
  %li SQL
  %li Linear Regression

%h2 Questions:
%ul
  %li What is Linear Algebra?
  %li Why learn NumPy?
  %li How to learn Pandas?
  %li Is SQL easy to use?
  %li How to visualize Linear Regression?

%h2#lab Lab:
%ul
  %li Use Pandas to plot prices of GSPC for 2016.
  %li
    %a(href='/cclasses/class03p10') Answer
  %li Plot a straight line from first price to last price.
  %li
    %a(href='/cclasses/class03p13') Answer
  %li Calculate RMSE for that line.
  %li
    %a(href='/cclasses/class03p15') Answer
  %li Find Linear Algebra expression to fit a line to a scatter plot.
  %li
    Answer:
    %hr/
    %img(src='/class03/pdf1.png')
    %hr/
  %li Use Linear Algebra to fit a line to GSPC 2016 price points.
  %li
    %a(href='/cclasses/class03p17') Answer
  %li Calculate RMSE for that fitted line.
  %li
    %a(href='/cclasses/class03p22') Answer
  %li Show a plot of the fitted line on top of the 2016 prices.
  %li
    %a(href='/cclasses/class03p26') Answer
  %li Install MADlib 1.9 into Postgres 9.3 on CentOS 7.
  %li
    %a(href='/cclasses/class03m10') Answer
  %li
    On your MADlib host, git pull
    %a(href='https://github.com/danbikle/madlib_demos' target='x')
      https://github.com/danbikle/madlib_demos
  %li
    %a(href='/cclasses/class03m11') Answer
  %li Write shell script which calls psql and connects to user named madlib.
  %li
    %a(href='/cclasses/class03m14') Answer
  %li Download S&P 500 prices from Yahoo, load them into table called prices.
  %li
    %a(href='/cclasses/class03m12') Answer
  %li
    Describe what this syntax does:
    .syntax
      %pre
        %code.sql
          SELECT COUNT(cdate) FROM prices;
          SELECT COUNT(lowp)  FROM prices;
          SELECT COUNT(*)     FROM prices;
          SELECT MIN(cdate),MIN(closep),MIN(volume) FROM prices;
          SELECT MAX(closep),MAX(volume), AVG(closep),AVG(volume) FROM prices;

  %li Write Pandas syntax which mimics the above SQL.
  %li
    %a(href='/cclasses/class03pd10') Answer
  %li
    Describe what this syntax does:
    .syntax
      %pre
        %code.sql
          SELECT * FROM prices WHERE cdate = (SELECT MAX(cdate) FROM prices);            
          SELECT cdate,closep FROM prices WHERE cdate = (SELECT MAX(cdate)-1 FROM prices); 
          SELECT cdate,closep FROM prices WHERE cdate > (SELECT MAX(cdate)-10 FROM prices);
          
  %li Write Pandas syntax which mimics the above SQL.
  %li
    %a(href='/cclasses/class03pd13') Answer

  %li
    Describe what this syntax does:
    .syntax
      %pre
        =render 'class03pd18'
  %li Write Pandas syntax which mimics the above SQL.
  %li
    %a(href='/cclasses/class03pd19') Answer

  %li
    Describe what this syntax does:
    .syntax
      %pre
        =render 'class03pd23'
  %li Write Pandas syntax which mimics the above SQL.
  %li
    %a(href='/cclasses/class03pd24') Answer

  %li
    Describe what this syntax does:
    .syntax
      %pre
        =render 'class03pd28'
  %li Write Pandas syntax which mimics the above SQL.
  %li
    %a(href='/cclasses/class03pd29') Answer
  
  %li
    Describe what this syntax does:
    .syntax
      %pre
        =render 'class03pd32'
  %li Write Pandas syntax which mimics the above SQL.
  %li
    %a(href='/cclasses/class03pd33') Answer  

  %li
    Describe what this syntax does:
    .syntax
      %pre
        =render 'class03pd36'
